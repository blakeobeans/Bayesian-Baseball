"0","wsmodelelasticity <- read.csv(""D:/Google Drive/Life/Statistics/Bayesian Baseball II/data/WS Investigation/wsmodelelasticity.csv"")"
"0","TEMP <- wsmodelelasticity; TEMP <- rbind(mydata, TEMP) #update model (after game 4)"
"0","set.seed(1234)"
"0","options(mc.cores = parallel::detectCores())"
"0","game5.m <- map2stan("
"0","  alist("
"0","    rdiff ~ dnorm( mu, sigma),"
"0","    ###likelihood"
"0","    mu <- A + BH + PH + BA + PA + FH + FA,"
"0","    #varying intercepts"
"0","    A <- h[home] + a[away] + a, "
"0","    #home- batting"
"0","    BH <- hits_h[home] * Hh + double_h[home] * B2Bh + triple_h[home] * B3Bh + "
"0","         HR_h[home] * BHRh + balls_h[home] * BBBh + bh, "
"0","    #home- pitching"
"0","    PH <-  hits_allowed_h[home] * HHAh + pballs_h[home] * PBBh + "
"0","          pstrikeouts_h[home] * PSOh +  strikes_h[home] * Strh + ph,"
"0","    #away- batting"
"0","    BA <- hits_a[away] * Ha + double_a[away] * B2Ba + triple_a[away] * B3Ba + "
"0","      HR_a[away] * BHRa + balls_a[away] * BBBa +  ba, "
"0","    #away- pitching"
"0","    PA <- hits_allowed_a[away] * HHAa + pballs_a[away] * PBBa + "
"0","      pstrikeouts_a[away] * PSOa + strikes_a[away] * Stra + pa,"
"0","    #home- fielding"
"0","    FH <- fh1 * PO_h + fh2 * A_h + fh3 * E_h + fh4 * DP_h + fh,"
"0","    FA <-  fa1 * PO_a + fa2 * A_a + fa3 * E_a + fa4 * DP_a + fa,"
"0","    ###adaptive priors"
"0","    c(h, hits_h, double_h, triple_h, HR_h, balls_h, hits_allowed_h, pballs_h, "
"0","      pstrikeouts_h, strikes_h)[home] ~ dmvnormNC(sigma_home,Rho_home),"
"0","    c(a, hits_a, double_a, triple_a, HR_a, balls_a, hits_allowed_a, pballs_a, "
"0","      pstrikeouts_a, strikes_a)[away] ~ dmvnormNC(sigma_away,Rho_away),"
"0","    ###standard priors"
"0","    c(a, bh, ph, fh, ba, pa, fa) ~ dnorm(0,1), #hyperpriors"
"0","    c(fh1, fh2, fh3, fh4, fa1, fa2, fa3, fa4) ~ dnorm(0,1), #scaled variables"
"0","    sigma_home ~ dcauchy(0,2),"
"0","    sigma_away ~ dcauchy(0,2),"
"0","    Rho_home ~ dlkjcorr(4),"
"0","    Rho_away ~ dlkjcorr(4),"
"0","    sigma ~ dcauchy(0,2)),"
"0","  data=TEMP,"
"0","  iter=2000, warmup=250, chains=1, cores=4)"
"1","DIAGNOSTIC(S) FROM PARSER:"
"1","
"
"1","Info (non-fatal):"
"1","
"
"1","Left-hand side of sampling statement (~) may contain a non-linear transform of a parameter or local variable."
"1","
"
"1","If it does, you need to include a target += statement with the log absolute determinant of the Jacobian of the transform."
"1","
"
"1","Left-hand-side of sampling statement:"
"1","
"
"1","    a ~ normal(...)"
"1","
"
"1","
"
"1","
"
"1","SAMPLING"
"1"," FOR MODEL '"
"1","e8a2b5888c798d6c69127c5e031467c5"
"1","' NOW (CHAIN "
"1","1"
"1",").
"
"1","Chain "
"1","1"
"1",": "
"1","
"
"1","Chain "
"1","1"
"1",": "
"1","Gradient evaluation took 0.007 seconds"
"1","
"
"1","Chain "
"1","1"
"1",": "
"1","1000 transitions using 10 leapfrog steps per transition would take 70 seconds."
"1","
"
"1","Chain "
"1","1"
"1",": "
"1","Adjust your expectations accordingly!"
"1","
"
"1","Chain "
"1","1"
"1",": "
"1","
"
"1","Chain "
"1","1"
"1",": "
"1","
"
"1","Chain "
"1","1"
"1",": "
"1","Iteration:    1 / 2000 [  0%]  (Warmup)"
"1","
"
